void LoadWGLFunctionsFromContext()
{
#ifdef WGL_3DL_stereo_control
	LOAD_OGL_FUNCTION(PFNWGLSETSTEREOEMITTERSTATE3DLPROC, wglSetStereoEmitterState3DL);
#endif

#ifdef WGL_AMD_gpu_association
	LOAD_OGL_FUNCTION(PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC,         wglBlitContextFramebufferAMD);
	LOAD_OGL_FUNCTION(PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC,        wglCreateAssociatedContextAMD);
	LOAD_OGL_FUNCTION(PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC, wglCreateAssociatedContextAttribsAMD);
	LOAD_OGL_FUNCTION(PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC,        wglDeleteAssociatedContextAMD);
	LOAD_OGL_FUNCTION(PFNWGLGETCONTEXTGPUIDAMDPROC,                wglGetContextGPUIDAMD);
	LOAD_OGL_FUNCTION(PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC,    wglGetCurrentAssociatedContextAMD);
	LOAD_OGL_FUNCTION(PFNWGLGETGPUIDSAMDPROC,                      wglGetGPUIDsAMD);
	LOAD_OGL_FUNCTION(PFNWGLGETGPUINFOAMDPROC,                     wglGetGPUInfoAMD);
	LOAD_OGL_FUNCTION(PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC,   wglMakeAssociatedContextCurrentAMD);
#endif

#ifdef WGL_ARB_buffer_region
	LOAD_OGL_FUNCTION(PFNWGLCREATEBUFFERREGIONARBPROC,  wglCreateBufferRegionARB);
	LOAD_OGL_FUNCTION(PFNWGLDELETEBUFFERREGIONARBPROC,  wglDeleteBufferRegionARB);
	LOAD_OGL_FUNCTION(PFNWGLRESTOREBUFFERREGIONARBPROC, wglRestoreBufferRegionARB);
	LOAD_OGL_FUNCTION(PFNWGLSAVEBUFFERREGIONARBPROC,    wglSaveBufferRegionARB);
#endif

#ifdef WGL_ARB_create_context
	LOAD_OGL_FUNCTION(PFNWGLCREATECONTEXTATTRIBSARBPROC, wglCreateContextAttribsARB);
#endif

#ifdef WGL_ARB_extensions_string
	LOAD_OGL_FUNCTION(PFNWGLGETEXTENSIONSSTRINGARBPROC, wglGetExtensionsStringARB);
#endif

#ifdef WGL_ARB_make_current_read
	LOAD_OGL_FUNCTION(PFNWGLGETCURRENTREADDCARBPROC,   wglGetCurrentReadDCARB);
	LOAD_OGL_FUNCTION(PFNWGLMAKECONTEXTCURRENTARBPROC, wglMakeContextCurrentARB);
#endif

#ifdef WGL_ARB_pbuffer
	LOAD_OGL_FUNCTION(PFNWGLCREATEPBUFFERARBPROC,    wglCreatePbufferARB);
	LOAD_OGL_FUNCTION(PFNWGLDESTROYPBUFFERARBPROC,   wglDestroyPbufferARB);
	LOAD_OGL_FUNCTION(PFNWGLGETPBUFFERDCARBPROC,     wglGetPbufferDCARB);
	LOAD_OGL_FUNCTION(PFNWGLQUERYPBUFFERARBPROC,     wglQueryPbufferARB);
	LOAD_OGL_FUNCTION(PFNWGLRELEASEPBUFFERDCARBPROC, wglReleasePbufferDCARB);
#endif

#ifdef WGL_ARB_pixel_format
	LOAD_OGL_FUNCTION(PFNWGLCHOOSEPIXELFORMATARBPROC,      wglChoosePixelFormatARB);
	LOAD_OGL_FUNCTION(PFNWGLGETPIXELFORMATATTRIBFVARBPROC, wglGetPixelFormatAttribfvARB);
	LOAD_OGL_FUNCTION(PFNWGLGETPIXELFORMATATTRIBIVARBPROC, wglGetPixelFormatAttribivARB);
#endif

#ifdef WGL_ARB_render_texture
	LOAD_OGL_FUNCTION(PFNWGLBINDTEXIMAGEARBPROC,     wglBindTexImageARB);
	LOAD_OGL_FUNCTION(PFNWGLRELEASETEXIMAGEARBPROC,  wglReleaseTexImageARB);
	LOAD_OGL_FUNCTION(PFNWGLSETPBUFFERATTRIBARBPROC, wglSetPbufferAttribARB);
#endif

#ifdef WGL_EXT_display_color_table
	LOAD_OGL_FUNCTION(PFNWGLBINDDISPLAYCOLORTABLEEXTPROC,    wglBindDisplayColorTableEXT);
	LOAD_OGL_FUNCTION(PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC,  wglCreateDisplayColorTableEXT);
	LOAD_OGL_FUNCTION(PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC, wglDestroyDisplayColorTableEXT);
	LOAD_OGL_FUNCTION(PFNWGLLOADDISPLAYCOLORTABLEEXTPROC,    wglLoadDisplayColorTableEXT);
#endif

#ifdef WGL_EXT_extensions_string
	LOAD_OGL_FUNCTION(PFNWGLGETEXTENSIONSSTRINGEXTPROC, wglGetExtensionsStringEXT);
#endif

#ifdef WGL_EXT_make_current_read
	LOAD_OGL_FUNCTION(PFNWGLGETCURRENTREADDCEXTPROC,   wglGetCurrentReadDCEXT);
	LOAD_OGL_FUNCTION(PFNWGLMAKECONTEXTCURRENTEXTPROC, wglMakeContextCurrentEXT);
#endif

#ifdef WGL_EXT_pbuffer
	LOAD_OGL_FUNCTION(PFNWGLCREATEPBUFFEREXTPROC,    wglCreatePbufferEXT);
	LOAD_OGL_FUNCTION(PFNWGLDESTROYPBUFFEREXTPROC,   wglDestroyPbufferEXT);
	LOAD_OGL_FUNCTION(PFNWGLGETPBUFFERDCEXTPROC,     wglGetPbufferDCEXT);
	LOAD_OGL_FUNCTION(PFNWGLQUERYPBUFFEREXTPROC,     wglQueryPbufferEXT);
	LOAD_OGL_FUNCTION(PFNWGLRELEASEPBUFFERDCEXTPROC, wglReleasePbufferDCEXT);
#endif

#ifdef WGL_EXT_pixel_format
	LOAD_OGL_FUNCTION(PFNWGLCHOOSEPIXELFORMATEXTPROC,      wglChoosePixelFormatEXT);
	LOAD_OGL_FUNCTION(PFNWGLGETPIXELFORMATATTRIBFVEXTPROC, wglGetPixelFormatAttribfvEXT);
	LOAD_OGL_FUNCTION(PFNWGLGETPIXELFORMATATTRIBIVEXTPROC, wglGetPixelFormatAttribivEXT);
#endif

#ifdef WGL_EXT_swap_control
	LOAD_OGL_FUNCTION(PFNWGLGETSWAPINTERVALEXTPROC, wglGetSwapIntervalEXT);
	LOAD_OGL_FUNCTION(PFNWGLSWAPINTERVALEXTPROC,    wglSwapIntervalEXT);
#endif

#ifdef WGL_I3D_digital_video_control
	LOAD_OGL_FUNCTION(PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC, wglGetDigitalVideoParametersI3D);
	LOAD_OGL_FUNCTION(PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC, wglSetDigitalVideoParametersI3D);
#endif

#ifdef WGL_I3D_gamma
	LOAD_OGL_FUNCTION(PFNWGLGETGAMMATABLEI3DPROC,           wglGetGammaTableI3D);
	LOAD_OGL_FUNCTION(PFNWGLGETGAMMATABLEPARAMETERSI3DPROC, wglGetGammaTableParametersI3D);
	LOAD_OGL_FUNCTION(PFNWGLSETGAMMATABLEI3DPROC,           wglSetGammaTableI3D);
	LOAD_OGL_FUNCTION(PFNWGLSETGAMMATABLEPARAMETERSI3DPROC, wglSetGammaTableParametersI3D);
#endif

#ifdef WGL_I3D_genlock
	LOAD_OGL_FUNCTION(PFNWGLDISABLEGENLOCKI3DPROC,             wglDisableGenlockI3D);
	LOAD_OGL_FUNCTION(PFNWGLENABLEGENLOCKI3DPROC,              wglEnableGenlockI3D);
	LOAD_OGL_FUNCTION(PFNWGLGENLOCKSAMPLERATEI3DPROC,          wglGenlockSampleRateI3D);
	LOAD_OGL_FUNCTION(PFNWGLGENLOCKSOURCEDELAYI3DPROC,         wglGenlockSourceDelayI3D);
	LOAD_OGL_FUNCTION(PFNWGLGENLOCKSOURCEEDGEI3DPROC,          wglGenlockSourceEdgeI3D);
	LOAD_OGL_FUNCTION(PFNWGLGENLOCKSOURCEI3DPROC,              wglGenlockSourceI3D);
	LOAD_OGL_FUNCTION(PFNWGLGETGENLOCKSAMPLERATEI3DPROC,       wglGetGenlockSampleRateI3D);
	LOAD_OGL_FUNCTION(PFNWGLGETGENLOCKSOURCEDELAYI3DPROC,      wglGetGenlockSourceDelayI3D);
	LOAD_OGL_FUNCTION(PFNWGLGETGENLOCKSOURCEEDGEI3DPROC,       wglGetGenlockSourceEdgeI3D);
	LOAD_OGL_FUNCTION(PFNWGLGETGENLOCKSOURCEI3DPROC,           wglGetGenlockSourceI3D);
	LOAD_OGL_FUNCTION(PFNWGLISENABLEDGENLOCKI3DPROC,           wglIsEnabledGenlockI3D);
	LOAD_OGL_FUNCTION(PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC, wglQueryGenlockMaxSourceDelayI3D);
#endif

#ifdef WGL_I3D_image_buffer
	LOAD_OGL_FUNCTION(PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC, wglAssociateImageBufferEventsI3D);
	LOAD_OGL_FUNCTION(PFNWGLCREATEIMAGEBUFFERI3DPROC,          wglCreateImageBufferI3D);
	LOAD_OGL_FUNCTION(PFNWGLDESTROYIMAGEBUFFERI3DPROC,         wglDestroyImageBufferI3D);
	LOAD_OGL_FUNCTION(PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC,   wglReleaseImageBufferEventsI3D);
#endif

#ifdef WGL_I3D_swap_frame_lock
	LOAD_OGL_FUNCTION(PFNWGLDISABLEFRAMELOCKI3DPROC,     wglDisableFrameLockI3D);
	LOAD_OGL_FUNCTION(PFNWGLENABLEFRAMELOCKI3DPROC,      wglEnableFrameLockI3D);
	LOAD_OGL_FUNCTION(PFNWGLISENABLEDFRAMELOCKI3DPROC,   wglIsEnabledFrameLockI3D);
	LOAD_OGL_FUNCTION(PFNWGLQUERYFRAMELOCKMASTERI3DPROC, wglQueryFrameLockMasterI3D);
#endif

#ifdef WGL_I3D_swap_frame_usage
	LOAD_OGL_FUNCTION(PFNWGLBEGINFRAMETRACKINGI3DPROC, wglBeginFrameTrackingI3D);
	LOAD_OGL_FUNCTION(PFNWGLENDFRAMETRACKINGI3DPROC,   wglEndFrameTrackingI3D);
	LOAD_OGL_FUNCTION(PFNWGLGETFRAMEUSAGEI3DPROC,      wglGetFrameUsageI3D);
	LOAD_OGL_FUNCTION(PFNWGLQUERYFRAMETRACKINGI3DPROC, wglQueryFrameTrackingI3D);
#endif

#ifdef WGL_NV_DX_interop
	LOAD_OGL_FUNCTION(PFNWGLDXCLOSEDEVICENVPROC,            wglDXCloseDeviceNV);
	LOAD_OGL_FUNCTION(PFNWGLDXLOCKOBJECTSNVPROC,            wglDXLockObjectsNV);
	LOAD_OGL_FUNCTION(PFNWGLDXOBJECTACCESSNVPROC,           wglDXObjectAccessNV);
	LOAD_OGL_FUNCTION(PFNWGLDXOPENDEVICENVPROC,             wglDXOpenDeviceNV);
	LOAD_OGL_FUNCTION(PFNWGLDXREGISTEROBJECTNVPROC,         wglDXRegisterObjectNV);
	LOAD_OGL_FUNCTION(PFNWGLDXSETRESOURCESHAREHANDLENVPROC, wglDXSetResourceShareHandleNV);
	LOAD_OGL_FUNCTION(PFNWGLDXUNLOCKOBJECTSNVPROC,          wglDXUnlockObjectsNV);
	LOAD_OGL_FUNCTION(PFNWGLDXUNREGISTEROBJECTNVPROC,       wglDXUnregisterObjectNV);
#endif

#ifdef WGL_NV_copy_image
	LOAD_OGL_FUNCTION(PFNWGLCOPYIMAGESUBDATANVPROC, wglCopyImageSubDataNV);
#endif

#ifdef WGL_NV_delay_before_swap
	LOAD_OGL_FUNCTION(PFNWGLDELAYBEFORESWAPNVPROC, wglDelayBeforeSwapNV);
#endif

#ifdef WGL_NV_gpu_affinity
	LOAD_OGL_FUNCTION(PFNWGLCREATEAFFINITYDCNVPROC,       wglCreateAffinityDCNV);
	LOAD_OGL_FUNCTION(PFNWGLDELETEDCNVPROC,               wglDeleteDCNV);
	LOAD_OGL_FUNCTION(PFNWGLENUMGPUDEVICESNVPROC,         wglEnumGpuDevicesNV);
	LOAD_OGL_FUNCTION(PFNWGLENUMGPUSFROMAFFINITYDCNVPROC, wglEnumGpusFromAffinityDCNV);
	LOAD_OGL_FUNCTION(PFNWGLENUMGPUSNVPROC,               wglEnumGpusNV);
#endif

#ifdef WGL_NV_present_video
	LOAD_OGL_FUNCTION(PFNWGLBINDVIDEODEVICENVPROC,       wglBindVideoDeviceNV);
	LOAD_OGL_FUNCTION(PFNWGLENUMERATEVIDEODEVICESNVPROC, wglEnumerateVideoDevicesNV);
	LOAD_OGL_FUNCTION(PFNWGLQUERYCURRENTCONTEXTNVPROC,   wglQueryCurrentContextNV);
#endif

#ifdef WGL_NV_swap_group
	LOAD_OGL_FUNCTION(PFNWGLBINDSWAPBARRIERNVPROC,    wglBindSwapBarrierNV);
	LOAD_OGL_FUNCTION(PFNWGLJOINSWAPGROUPNVPROC,      wglJoinSwapGroupNV);
	LOAD_OGL_FUNCTION(PFNWGLQUERYFRAMECOUNTNVPROC,    wglQueryFrameCountNV);
	LOAD_OGL_FUNCTION(PFNWGLQUERYMAXSWAPGROUPSNVPROC, wglQueryMaxSwapGroupsNV);
	LOAD_OGL_FUNCTION(PFNWGLQUERYSWAPGROUPNVPROC,     wglQuerySwapGroupNV);
	LOAD_OGL_FUNCTION(PFNWGLRESETFRAMECOUNTNVPROC,    wglResetFrameCountNV);
#endif

#ifdef WGL_NV_vertex_array_range
	LOAD_OGL_FUNCTION(PFNWGLALLOCATEMEMORYNVPROC, wglAllocateMemoryNV);
	LOAD_OGL_FUNCTION(PFNWGLFREEMEMORYNVPROC,     wglFreeMemoryNV);
#endif

#ifdef WGL_NV_video_capture
	LOAD_OGL_FUNCTION(PFNWGLBINDVIDEOCAPTUREDEVICENVPROC,       wglBindVideoCaptureDeviceNV);
	LOAD_OGL_FUNCTION(PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC, wglEnumerateVideoCaptureDevicesNV);
	LOAD_OGL_FUNCTION(PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC,       wglLockVideoCaptureDeviceNV);
	LOAD_OGL_FUNCTION(PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC,      wglQueryVideoCaptureDeviceNV);
	LOAD_OGL_FUNCTION(PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC,    wglReleaseVideoCaptureDeviceNV);
#endif

#ifdef WGL_NV_video_output
	LOAD_OGL_FUNCTION(PFNWGLBINDVIDEOIMAGENVPROC,     wglBindVideoImageNV);
	LOAD_OGL_FUNCTION(PFNWGLGETVIDEODEVICENVPROC,     wglGetVideoDeviceNV);
	LOAD_OGL_FUNCTION(PFNWGLGETVIDEOINFONVPROC,       wglGetVideoInfoNV);
	LOAD_OGL_FUNCTION(PFNWGLRELEASEVIDEODEVICENVPROC, wglReleaseVideoDeviceNV);
	LOAD_OGL_FUNCTION(PFNWGLRELEASEVIDEOIMAGENVPROC,  wglReleaseVideoImageNV);
	LOAD_OGL_FUNCTION(PFNWGLSENDPBUFFERTOVIDEONVPROC, wglSendPbufferToVideoNV);
#endif

#ifdef WGL_OML_sync_control
	LOAD_OGL_FUNCTION(PFNWGLGETMSCRATEOMLPROC,          wglGetMscRateOML);
	LOAD_OGL_FUNCTION(PFNWGLGETSYNCVALUESOMLPROC,       wglGetSyncValuesOML);
	LOAD_OGL_FUNCTION(PFNWGLSWAPBUFFERSMSCOMLPROC,      wglSwapBuffersMscOML);
	LOAD_OGL_FUNCTION(PFNWGLSWAPLAYERBUFFERSMSCOMLPROC, wglSwapLayerBuffersMscOML);
	LOAD_OGL_FUNCTION(PFNWGLWAITFORMSCOMLPROC,          wglWaitForMscOML);
	LOAD_OGL_FUNCTION(PFNWGLWAITFORSBCOMLPROC,          wglWaitForSbcOML);
#endif
}